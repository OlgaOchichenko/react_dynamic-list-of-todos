{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","setSelectedTodo","className","map","todo","id","completed","clssnames","title","type","onClick","TodoFilter","setQuery","setFilterTodoBy","query","filterTodoBy","name","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","useState","selectedUser","setSelectedUser","useEffect","userId","href","email","App","setTodos","setTodo","isLoading","setIsLoading","todosFromServer","filterTodos","filter","todoItem","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4afa94d0.chunk.js","sourcesContent":["import React from 'react';\nimport clssnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: Todo | null,\n  setSelectedTodo:(obj: Todo | null) => void,\n\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  setSelectedTodo,\n\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={clssnames(\n                  {\n                    'has-text-danger': todo.completed === false,\n                    'has-text-success': todo.completed === true,\n                  },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                }}\n              >\n                {}\n                <span className=\"icon\">\n                  <i\n                    className={clssnames(\n                      {\n                        'far fa-eye': selectTodo?.id !== todo.id,\n                        'far fa-eye-slash': selectTodo?.id === todo.id,\n                      },\n                    )}\n\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setQuery: (value: string) => void,\n  query: string,\n  filterTodoBy: string,\n  setFilterTodoBy: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setQuery,\n  setFilterTodoBy,\n  query,\n  filterTodoBy,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            name=\"typeSort\"\n            value={filterTodoBy}\n            onChange={(event) => {\n              setFilterTodoBy(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0\n            && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => (setQuery(''))}\n              />\n            )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo | null,\n  selectedTodo: (obj: Todo | null) => void,\n\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectedTodo }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!todo) {\n      return;\n    }\n\n    getUser(todo?.userId)\n      .then(setSelectedUser);\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                selectedTodo(null);\n                setSelectedUser(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterTodoBy, setFilterTodoBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => {\n        setTodos(todosFromServer);\n        setIsLoading(true);\n      });\n  }, []);\n\n  const filterTodos = todos\n    .filter((todoItem) => {\n      if (filterTodoBy === 'active') {\n        return !todoItem.completed;\n      }\n\n      if (filterTodoBy === 'completed') {\n        return todoItem.completed;\n      }\n\n      return todoItem;\n    })\n    .filter((todoItem) => (\n      todoItem.title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQuery={setQuery}\n                query={query}\n                filterTodoBy={filterTodoBy}\n                setFilterTodoBy={setFilterTodoBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                !isLoading\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={filterTodos}\n                      selectTodo={todo}\n                      setSelectedTodo={setTodo}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo?.userId && (\n        <TodoModal\n          todo={todo}\n          selectedTodo={setTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}